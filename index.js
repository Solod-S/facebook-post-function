require("dotenv").config();
const fs = require("fs");
const path = require("path");
const { PAGE_ID, PERMANENT_PAGE_TOKEN } = process.env;

const fb = require("./facebookPageApi");

(async () => {
  try {
    // === 1. –¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç ===
    const textPost = await fb.postText(
      PAGE_ID,
      PERMANENT_PAGE_TOKEN,
      "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç."
    );
    console.log("Text post:", textPost);

    // === 2. –ü–æ—Å—Ç —Å –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π ===
    const buffer1 = fs.readFileSync(
      path.resolve(__dirname, "assets", "logo.jpg")
    );
    const imagePost = await fb.postImage(
      PAGE_ID,
      PERMANENT_PAGE_TOKEN,
      buffer1,
      "–ü–æ—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π üöÄ"
    );
    console.log("Image post:", imagePost);

    // === 3. –ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ ===
    const buffer2 = fs.readFileSync(
      path.resolve(__dirname, "assets", "logo.jpg")
    );
    const buffer3 = fs.readFileSync(
      path.resolve(__dirname, "assets", "logo.jpg")
    );
    const multiImagePost = await fb.postMultipleImages(
      PAGE_ID,
      PERMANENT_PAGE_TOKEN,
      [buffer2, buffer3],
      "–ü–æ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ üì∏"
    );
    console.log("Multi image post:", multiImagePost);

    // === 4. –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã ===
    const posts = await fb.getPagePosts(PAGE_ID, PERMANENT_PAGE_TOKEN, 5);
    console.log("Last posts:", posts);

    // === 5. –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ—Å—Ç—É ===
    if (posts.length > 0) {
      const insights = await fb.getPostInsights(
        posts[0].id,
        PERMANENT_PAGE_TOKEN
      );
      console.log("Insights for first post:", insights);
    }

    // === 6. –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç (–ø—Ä–∏–º–µ—Ä: –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç) ===
    if (posts.length > 0) {
      const del = await fb.deletePagePost(posts[0].id, PERMANENT_PAGE_TOKEN);
      console.log("Deleted:", del);
    }

    // === 7. –û—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É ===
    const comment = await fb.commentOnPost(
      posts[1].id,
      PERMANENT_PAGE_TOKEN,
      "–ü–µ—Ä–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É üí¨"
    );
    console.log("Comment added:", comment);

    // === 8. –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ===
    if (comment?.id) {
      const reply = await fb.replyToComment(
        comment.id,
        PERMANENT_PAGE_TOKEN,
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π! üôå"
      );
      console.log("Reply to comment:", reply);
    }
  } catch (err) {
    console.error("Error:", err.response?.data || err.message);
  }
})();
